<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string></string>
	<key>category</key>
	<string>Productivity</string>
	<key>connections</key>
	<dict>
		<key>0C8B4CF2-63A1-4F22-8C66-208A7ED1B714</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>EC687312-5BBB-4C9B-AE06-2C406DDB04C1</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>52E29BF5-7C4C-4A68-B573-8036E61B92D2</string>
				<key>modifiers</key>
				<integer>1048576</integer>
				<key>modifiersubtext</key>
				<string>Query {query}</string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>E5C37A3F-1DEF-413C-A20B-7F127437FE65</string>
				<key>modifiers</key>
				<integer>131072</integer>
				<key>modifiersubtext</key>
				<string>Copy to clipboard {var:url}</string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>6F7BB1C9-4226-4052-9215-20360AADC1C1</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>EC687312-5BBB-4C9B-AE06-2C406DDB04C1</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>52E29BF5-7C4C-4A68-B573-8036E61B92D2</string>
				<key>modifiers</key>
				<integer>1048576</integer>
				<key>modifiersubtext</key>
				<string>Query {query}</string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>E5C37A3F-1DEF-413C-A20B-7F127437FE65</string>
				<key>modifiers</key>
				<integer>131072</integer>
				<key>modifiersubtext</key>
				<string>Copy to clipboard {var:url}</string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>84F27AFE-7CD6-4A70-8F3E-A4ECF497B888</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>EC687312-5BBB-4C9B-AE06-2C406DDB04C1</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>52E29BF5-7C4C-4A68-B573-8036E61B92D2</string>
				<key>modifiers</key>
				<integer>1048576</integer>
				<key>modifiersubtext</key>
				<string>Query {query}</string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>E5C37A3F-1DEF-413C-A20B-7F127437FE65</string>
				<key>modifiers</key>
				<integer>131072</integer>
				<key>modifiersubtext</key>
				<string>Copy to clipboard {var:url}</string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Brandt Lareau</string>
	<key>description</key>
	<string>Use keyword "rails" to search API docs</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>Ruby &amp; Rails API Docs</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<false/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>102</integer>
				<key>keyword</key>
				<string>rails</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Preloading Rails Versions for the first time this might take a while</string>
				<key>script</key>
				<string>require './config'
require './rails_search_doc'
require './rails_versions'
require 'securerandom'

query = ARGV[0].to_s
rails_versions = RailsVersions.new(query)

responses = RailsSearchDoc.new(rails_versions.results, query).results
items = responses.map do |response|
  {
    uid: SecureRandom.uuid,
    type: 'default',
    arg: "https://api.rubyonrails.org/?q=#{query}",
    subtitle: response.description,
    title: response.title,
  autocomplete: response.title,
    variables: {
      url: response.url,
      version: response.version
    }
  }.compact
end
if items.empty?
  items = [
    {
      uid: query,
      type: 'default',
      arg: query,
      subtitle: "Search for #{query}",
      title: query,
      autocomplete: query,
      variables: {
        url: "https://api.rubyonrails.org/?q=#{query}",
        version: rails_versions.first
      }
    }
  ]
end

print({ items: items }.to_json)</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string></string>
				<key>title</key>
				<string>Search Rails Docs</string>
				<key>type</key>
				<integer>2</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>0C8B4CF2-63A1-4F22-8C66-208A7ED1B714</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>browser</key>
				<string></string>
				<key>spaces</key>
				<string>+</string>
				<key>url</key>
				<string>{var:url}</string>
				<key>utf8</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.openurl</string>
			<key>uid</key>
			<string>EC687312-5BBB-4C9B-AE06-2C406DDB04C1</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<true/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>escaping</key>
				<integer>102</integer>
				<key>keyword</key>
				<string>ruby</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>1</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string></string>
				<key>script</key>
				<string>require './config'
require './gql/base'
query = ARGV[0].to_s

version = Config.version_names.find { |v| query.include?("v#{v}") || query.include?("V#{v}") } || Config.default_ruby_version
query = query.gsub("v#{version}", '').gsub("V#{version}", '').strip
response = Gql::RubyAutocomplete.new(version, query).results
autocomplete = response.parsed_body.dig('data', 'autocomplete') || []
items = autocomplete.map do |result|
  {
    uid: result['path'],
    type: 'default',
    arg: "https://rubyapi.org/{var:version}/o/s?q=#{query}",
    subtitle: "view #{result['path']}",
    title: result['text'],
    autocomplete: result['text'],
    variables: {
      url: "https://rubyapi.org/#{result['path']}",
      version: version
    }
  }
end
if items.empty?
  items = [
    {
      uid: query,
      type: 'default',
      arg: query,
      subtitle: "Search for #{query}",
      title: query,
      autocomplete: query,
      variables: {
        url: "https://rubyapi.org/{var:version}/o/s?q=#{query}",
        version: version
      }
    }
  ]
end


print({ items: items }.to_json)
					</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string></string>
				<key>title</key>
				<string>Search For ruby code on Ruby API</string>
				<key>type</key>
				<integer>2</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>6F7BB1C9-4226-4052-9215-20360AADC1C1</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>browser</key>
				<string></string>
				<key>spaces</key>
				<string>+</string>
				<key>url</key>
				<string>{query}</string>
				<key>utf8</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.openurl</string>
			<key>uid</key>
			<string>52E29BF5-7C4C-4A68-B573-8036E61B92D2</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<true/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>escaping</key>
				<integer>102</integer>
				<key>keyword</key>
				<string>gem</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>1</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string></string>
				<key>script</key>
				<string>require './autocomplete_gem'
query = ARGV[0].to_s

return print({ items: [] }.to_json) if query == ''


items = JSON.parse(AutocompleteGem.get(query).body).map do |result|
  {
    uid: result,
    type: 'default',
    arg: "https://rubygems.org/search?query=#{query}",
    subtitle: "view rubygems.org/gems/#{result}",
    title: result,
    autocomplete: result,
    variables: {
      url: "https://rubyapi.org/#{result}"
    }
  }
end
if items.empty?
  items = [
    {
      uid: query,
      type: 'default',
      arg: query,
      subtitle: "Search For #{query}",
      title: query,
      autocomplete: query,
      variables: {
        url: "https://rubygems.org/search?query=#{query}"
      }
    }
  ]
end
print({ items: items }.to_json)
					</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string></string>
				<key>title</key>
				<string>Search For Gem in rubygems.org</string>
				<key>type</key>
				<integer>2</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>84F27AFE-7CD6-4A70-8F3E-A4ECF497B888</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>autopaste</key>
				<true/>
				<key>clipboardtext</key>
				<string>{var:url}</string>
				<key>ignoredynamicplaceholders</key>
				<false/>
				<key>transient</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.clipboard</string>
			<key>uid</key>
			<string>E5C37A3F-1DEF-413C-A20B-7F127437FE65</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>Quick tool for search ruby docs for info.</string>
	<key>uidata</key>
	<dict>
		<key>0C8B4CF2-63A1-4F22-8C66-208A7ED1B714</key>
		<dict>
			<key>xpos</key>
			<integer>45</integer>
			<key>ypos</key>
			<integer>15</integer>
		</dict>
		<key>52E29BF5-7C4C-4A68-B573-8036E61B92D2</key>
		<dict>
			<key>xpos</key>
			<integer>470</integer>
			<key>ypos</key>
			<integer>130</integer>
		</dict>
		<key>6F7BB1C9-4226-4052-9215-20360AADC1C1</key>
		<dict>
			<key>xpos</key>
			<integer>45</integer>
			<key>ypos</key>
			<integer>130</integer>
		</dict>
		<key>84F27AFE-7CD6-4A70-8F3E-A4ECF497B888</key>
		<dict>
			<key>xpos</key>
			<integer>45</integer>
			<key>ypos</key>
			<integer>245</integer>
		</dict>
		<key>E5C37A3F-1DEF-413C-A20B-7F127437FE65</key>
		<dict>
			<key>xpos</key>
			<integer>470</integer>
			<key>ypos</key>
			<integer>245</integer>
		</dict>
		<key>EC687312-5BBB-4C9B-AE06-2C406DDB04C1</key>
		<dict>
			<key>xpos</key>
			<integer>470</integer>
			<key>ypos</key>
			<integer>15</integer>
		</dict>
	</dict>
	<key>variables</key>
	<dict>
		<key>VERSION</key>
		<string>2.6</string>
	</dict>
	<key>version</key>
	<string>2.5</string>
	<key>webaddress</key>
	<string>https://github.com/brand-it/alfred-workflow-ruby-and-rails-docs</string>
</dict>
</plist>
